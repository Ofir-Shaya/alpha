generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  profile  Profile?
}

model Profile {
  id                Int                @id @default(autoincrement())
  username          String             @unique
  puuid             String             @unique
  summonerLevel     Int
  profileIconId     Int?
  userId            Int?               @unique
  user              User?              @relation(fields: [userId], references: [id])
  rankedInformation RankedInformation?
}

model RankedInformation {
  summonerId       String             @id
  queueType        String
  tier             String
  rank             String
  leaguePoints     Int
  wins             Int
  losses           Int
  veteran          Boolean
  inactive         Boolean
  freshBlood       Boolean
  hotStreak        Boolean
  profileId        String             @unique
  profile          Profile            @relation(fields: [profileId], references: [puuid])
  playerMatchStats PlayerMatchStats[]
}

model PlayerMatchStats {
  matchId                     String
  playerId                    String
  win                         Int?
  championName                String
  spell1Id                    Int?
  spell2Id                    Int?
  item0                       Int?
  item1                       Int?
  item2                       Int?
  item3                       Int?
  item4                       Int?
  item5                       Int?
  item6                       Int?
  kills                       Int?
  deaths                      Int?
  assists                     Int?
  doubleKills                 Int?
  tripleKills                 Int?
  quadraKills                 Int?
  pentaKills                  Int?
  totalDamageDealtToChampions Int?
  totalHeal                   Int?
  totalHealsOnTeammates       Int?
  damageDealtToObjectives     Int?
  damageDealtToTurrets        Int?
  visionScore                 Int?
  timeCCingOthers             Int?
  totalDamageTaken            Int?
  goldEarned                  Int?
  wardsPlaced                 Int?
  wardsKilled                 Int?
  firstBloodKill              Boolean?
  firstTowerKill              Boolean?
  firstInhibitorKill          Boolean?
  firstBaronKill              Boolean?
  firstDragonKill             Boolean?
  firstRiftHeraldKill         Boolean?
  completeSupportQuestInTime  Boolean?
  champLevel                  Int?
  creepScore                  Int?
  mainRune                    Int?
  secondaryRune               Int?
  teamId                      Int
  player                      RankedInformation @relation(fields: [playerId], references: [summonerId])
  match                       Match             @relation(fields: [matchId], references: [id])

  @@unique([matchId, playerId])
  @@index([playerId])
  @@index([matchId])
}

model Match {
  id           String             @id @unique
  queueId      Int
  gameVersion  String
  gameMode     String
  mapId        Int
  gameDuration String
  gameCreation Float
  players      PlayerMatchStats[]
}

model Champions {
  id                          Int    @id @unique
  name                        String @unique
  gamesPlayed                 Int
  wins                        Int
  losses                      Int
  kills                       Int
  deaths                      Int
  assists                     Int
  killingSprees               Int
  doubleKills                 Int
  tripleKills                 Int
  quadraKills                 Int
  pentaKills                  Int
  totalDamageDealtToChampions Float
  totalHeal                   Float
  totalUnitsHealed            Float
  damageDealtToObjectives     Float
  damageDealtToTurrets        Float
  visionScore                 Int
  timeCCingOthers             Float
  totalDamageTaken            Float
  goldEarned                  Float
  wardsPlaced                 Int
  wardsKilled                 Int
  firstBloodKill              Int
  firstTowerKill              Int
  firstInhibitorKill          Int
  firstBaronKill              Int
  firstDragonKill             Int
  firstRiftHeraldKill         Int
  completeSupportQuestInTime  Int
  
}
